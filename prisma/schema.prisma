// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  email     String     @unique
  hash      String
  firstName String?
  lastName  String?
  avatar    String?
  role      Role[]     @default([USER])
  favorites Favorite[]

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Favorite {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  phraseBank   PhraseBank @relation(fields: [phraseBankId], references: [id])
  phraseBankId Int

  @@unique([userId, phraseBankId])
}

model Phrase {
  id           Int         @id @default(autoincrement())
  emoji        String?
  text         String
  sound        String
  phraseBank   PhraseBank? @relation(fields: [phraseBankId], references: [id])
  phraseBankId Int?
}

model PhraseBank {
  id         Int    @id @default(autoincrement())
  image      String
  text       String
  categoryId Int?

  phrases   Phrase[]
  favorites Favorite[]
  Category  Category?  @relation(fields: [categoryId], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  image String
  text  String

  phraseBanks PhraseBank[]
}

model ExerciseCategory {
  id                  Int                   @id @default(autoincrement())
  image               String
  text                String
  exerciseSubCategory ExerciseSubCategory[]
}

model ExerciseSubCategory {
  id                 Int              @id @default(autoincrement())
  text               String
  exerciseCategoryId Int
  exercise           Exercise?
  exerciseCategory   ExerciseCategory @relation(fields: [exerciseCategoryId], references: [id])
}

model Exercise {
  id                    Int                  @id @default(autoincrement())
  text                  String
  image                 String
  exerciseSubCategory   ExerciseSubCategory? @relation(fields: [exerciseSubCategoryId], references: [id])
  exerciseSubCategoryId Int?                 @unique
}

//logopeds
model SpeechTherapist {
  id      Int     @id @default(autoincrement())
  name    String
  phone   String
  email   String?
  address String?
  rating  Int
}
